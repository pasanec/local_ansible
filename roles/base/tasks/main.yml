- name: Install base dependencies
  apt:
    name:
      - ripgrep
      - fd-find
      - bat
      - git
      - php
      - zip
      - unzip
      - build-essential
      - make
      - curl
    state: latest
  when: ansible_distribution == "Ubuntu"

- name: Add neovim PPA
  apt_repository:
    repo: ppa:neovim-ppa/stable
    state: present
    update_cache: yes

- name: Install neovim from PPA
  apt:
    name:
      - neovim
    state: latest

- name: clone neovim configuration
  become: false
  ansible.builtin.git:
    repo: 'https://github.com/pasanec/kickstart.nvim.git'
    dest: ~/.config/nvim
    version: ijp

- name: Create intelephense directory
  become: false
  ansible.builtin.file:
    path: ~/intelephense
    state: directory
    mode: '0755'

- name: Copy intelephense activation key
  become: false
  ansible.builtin.copy:
    content: "{{ intelephense_activation_key }}"
    dest: ~/intelephense/licence.txt
    mode: '0600'

- name: Ensure system nodejs/npm are not installed (to avoid interference with nvm)
  apt:
    name:
      - nodejs
      - npm
    state: absent
  when: ansible_distribution == "Ubuntu"

- name: Install nvm
  become: false
  ansible.builtin.shell:
    cmd: "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash"
    creates: ~/.nvm/nvm.sh

- name: Install Node.js LTS via nvm
  become: false
  ansible.builtin.shell:
    cmd: "source ~/.nvm/nvm.sh && nvm install --lts"
    creates: ~/.nvm/versions/node
    executable: /bin/bash

- name: Install Gemini CLI via npm
  become: false
  ansible.builtin.shell:
    cmd: "source ~/.nvm/nvm.sh && npm install -g @google/gemini-cli"
    creates: ~/.nvm/versions/node/*/bin/gemini
    executable: /bin/bash

- name: Add GitHub CLI repository key
  apt_key:
    url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
    state: present
    keyring: /usr/share/keyrings/githubcli-archive-keyring.gpg

- name: Add GitHub CLI repository
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main"
    state: present
    filename: github-cli

- name: Install GitHub CLI
  apt:
    name: gh
    state: latest
    update_cache: yes

- name: Install GitHub Copilot CLI extension
  become: false
  ansible.builtin.shell:
    cmd: "gh extension install github/gh-copilot"
    creates: ~/.local/share/gh/extensions/gh-copilot

- name: Install uv (Python package manager)
  become: false
  ansible.builtin.shell:
    cmd: "curl -LsSf https://astral.sh/uv/install.sh | sh"
    creates: ~/.local/bin/uv

- name: Install Spec Kit CLI
  become: false
  ansible.builtin.shell:
    cmd: "~/.local/bin/uv tool install specify-cli --from git+https://github.com/github/spec-kit.git"
    creates: ~/.local/share/uv/tools/specify-cli
